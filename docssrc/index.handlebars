{{>imports}}
{{>header}}
<main>
    <h2>micro:net is a mesh network that uses the BBC micro:bit's radio module.</h2>
    <p>micro:net is capable of:</p>
    <ul>
        <li>transferring HTTP requests and responses between micro:bits</li>
        <li>splitting large payloads across multiple packets</li>
        <li>resending messages and packets if they become lost</li>
        <li>handling multiple incoming and outgoing messages and packets concurrently</li>
    </ul>
    <p>We liken micro:net to the internet, as multiple micro:bits can be connected to this network, and it is (theoretically) possible to route packets between multiple micro:net networks. The page you're seeing right now can be loaded on micro:net in seconds.</p>
    <details>
        <summary>FAQs</summary>
        <dl>
            <dt>Why build this?</dt>
            <dd>Mainly just for fun, but also to push the radio capabilities of the micro:bit to their limits. micro:net was built in time by a few BBC mentors for the Techathon 2024 event as a demonstration of ways in which micro:bits can be used in Internet of Things (or rather, micro:net of Things) applications. micro:net can probably also serve as a very useful alternative if the internet ceased to exist tomorrow.</dd>
            <dt>How fast is micro:net?</dt>
            <dd>Not as fast as the internet, that's for certain. However, it is impressively fast at transferring packets between two micro:bits. You'll experience similar speeds to what the internet in the 90s was like (except nowadays we can use much more modern web tech in our pages). For V1, micro:net uses a 1 Mb/s connection (we had issues with getting 2 Mb/s working, but 1 Mb/s is fine). Each packet has a payload of 128 bytes, as we found initially using 242 bytes (maximum micro:bit radio protocol message size minus micro:bit headers) to be unreliable due to the large size.</dd>
            <dt>Is micro:net accessible in a web browser?</dt>
            <dd>Yes; you can access micro:net in many popular web browsers, such as Google Chrome, Mozilla Firefox, Apple Safari and LiveG Sphere. You will need to have a micro:net modem (a micro:bit loaded with the modem program) connected via USB and the modem daemon running in the background. You will also need to configure your proxies to use a PAC script so your browser can resolve the .micronet TLD.</dd>
            <dt>What's the range of the micro:bit's radio module?</dt>
            <dd>For micro:net, we set the transmission power to 7, which is equivalent to +4 dBm. In limited practical tests, this means two micro:bits can successfully communicate multiple packets with each other through 3 floors of a building, but with a high rate of packet loss. We hope to add a relay system so that micro:bits can reliably talk to each other over longer distances.</dd>
            <dt>How robust is micro:net?</dt>
            <dd>micro:net is pretty robust due to its use of lost packet resending and checksum comparisons for packet payloads; but must reliability issues (such as those resulting in garbled data) are owing to micro:net conversations getting cut short as opposed to byte mutations (which for the latter, the checksum comparisons solve), mainly due to connections timing out. We're still working on ways to improve the reliability in this aspect â€” at the moment by increasing the timeouts.</dd>
            <dt>What is the maximum number of micro:bits that can be connected to micro:net at the same time?</dt>
            <dd>The theoretical maximum is 65,636 micro:bits for the V1 protocol. This is because micro:net IDs (micro:net's version of an IP address) is 16 bits long. If micro:net one day happens to overtake the internet in usage, then we'll release a V2 protocol that allows for larger micro:net IDs.</dd>
            <dt>Are communications encrypted?</dt>
            <dd>For now, communications are not encrypted between micro:bits. However, this is something that could be explored through asymmetric encryption of packet payloads. To prevent man-in-the-middle attacks, it would also be handy to employ some sort of digital signature system to verify that a micro:bit has ownership of a domain or ID.</dd>
        </dl>
    </details>
    <hr>
    <h2>showcase</h2>
    <h3><a href="http://home.micronet">home.micronet</a></h3>
    <p>This website, used to provide information on micro:net, such as the protocol. This website is also available <a href="https://bbcjl.github.io/micronet">on the internet</a>. The pages of this site are optimised through minification and efficient use of web tech to reduce the number of packets required to serve each page.</p>
    <h3><a href="http://bbc.micronet">bbc.micronet</a></h3>
    <p>A cut-down version of the BBC website that has also been specifically optimised for micro:net. Our ambition is that one day we can run all of the BBC's infrastructure on micro:bits via micro:net, mainly because it just feels like the right thing to do.</p>
</main>
{{>footer}}